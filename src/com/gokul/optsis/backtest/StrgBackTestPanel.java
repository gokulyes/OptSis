/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.gokul.optsis.backtest;

import com.gokul.optsis.MainWindow;
import com.gokul.optsis.backtest.dialog.AddNewLegDialog;
import com.gokul.optsis.backtest.model.PositionTableModel;
import com.gokul.optsis.backtest.model.OptLeg;
import com.gokul.optsis.backtest.model.OptStrg;
import com.gokul.optsis.backtest.model.OptionChain;
import com.gokul.optsis.backtest.model.OptionPrice;
import com.gokul.optsis.model.OptionChainTableModel;
import com.gokul.optsis.util.Util;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;
/**
 *
 * @author Gokul WPC
 */
public class StrgBackTestPanel extends javax.swing.JPanel {
    
    private PositionTableModel positionTableModel = new PositionTableModel();
    private OptionChainTableModel optionChainTableModel = new OptionChainTableModel();
    private OptStrg objOptStrg =  new OptStrg();
    private OptionChain optionChain = new OptionChain();
    private MainWindow mainwindow;

    /**
     * Creates new form StrgBackTestPanel
     */
    public StrgBackTestPanel(MainWindow window) {
        initComponents();
        this.mainwindow = window;
        
        initPnl();
        showPositionTableData();
        showOptionChainTableData();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlHeader = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        dtPicker = new com.toedter.calendar.JDateChooser();
        pnlContent = new javax.swing.JPanel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(300, 0), new java.awt.Dimension(300, 0), new java.awt.Dimension(300, 32767));
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPosition = new javax.swing.JTable();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(500, 0), new java.awt.Dimension(500, 0), new java.awt.Dimension(500, 32767));
        pnlChart = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblOptionChain = new javax.swing.JTable();

        setPreferredSize(new java.awt.Dimension(1800, 715));
        setLayout(new java.awt.BorderLayout());

        pnlHeader.setBackground(new java.awt.Color(129, 152, 48));
        pnlHeader.setPreferredSize(new java.awt.Dimension(1800, 109));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Strategy Back Test");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_foot_20px.png"))); // NOI18N
        jButton1.setText("Add Leg");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_database_import_20px.png"))); // NOI18N
        jButton2.setText("import data");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        dtPicker.setDateFormatString("yyyy-MM-dd");
        dtPicker.setDate(new Date());
        dtPicker.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dtPickerPropertyChange(evt);
            }
        });

        javax.swing.GroupLayout pnlHeaderLayout = new javax.swing.GroupLayout(pnlHeader);
        pnlHeader.setLayout(pnlHeaderLayout);
        pnlHeaderLayout.setHorizontalGroup(
            pnlHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHeaderLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(pnlHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlHeaderLayout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(26, 26, 26)
                        .addComponent(jButton2)
                        .addGap(126, 126, 126)
                        .addComponent(dtPicker, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1))
                .addContainerGap(1320, Short.MAX_VALUE))
        );
        pnlHeaderLayout.setVerticalGroup(
            pnlHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(pnlHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(jButton2))
                    .addComponent(dtPicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        add(pnlHeader, java.awt.BorderLayout.PAGE_START);

        pnlContent.setPreferredSize(new java.awt.Dimension(1800, 601));
        pnlContent.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        filler1.setBorder(new javax.swing.border.LineBorder(java.awt.SystemColor.activeCaption, 1, true));
        pnlContent.add(filler1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 530, 590));

        tblPosition.setModel(positionTableModel);
        jScrollPane1.setViewportView(tblPosition);

        pnlContent.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 510, 430));

        filler2.setBorder(new javax.swing.border.LineBorder(java.awt.SystemColor.activeCaption, 1, true));
        pnlContent.add(filler2, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 10, -1, 440));

        pnlChart.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlContent.add(pnlChart, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 20, 480, 420));

        tblOptionChain.setModel(optionChainTableModel);
        jScrollPane2.setViewportView(tblOptionChain);

        pnlContent.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 10, -1, -1));

        add(pnlContent, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
      AddNewLegDialog objAddNewLegDialog = new AddNewLegDialog(this.mainwindow , true, this.mainwindow);
      objAddNewLegDialog.setLocationRelativeTo(null);
      objAddNewLegDialog.setVisible(true);
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
       Util.insertIntoHDataTable();
    }//GEN-LAST:event_jButton2MouseClicked

    private void dtPickerPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dtPickerPropertyChange
        if ("date".equals(evt.getPropertyName())) {
            System.out.println(evt.getPropertyName()
                + ": " + (Date) evt.getNewValue());
            showOptionChain();
        }
    }//GEN-LAST:event_dtPickerPropertyChange


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser dtPicker;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel pnlChart;
    private javax.swing.JPanel pnlContent;
    private javax.swing.JPanel pnlHeader;
    private javax.swing.JTable tblOptionChain;
    private javax.swing.JTable tblPosition;
    // End of variables declaration//GEN-END:variables

    private void initPnl() {
            objOptStrg = Util.getStrgTestData();
            positionTableModel = (PositionTableModel) tblPosition.getModel();
  
            showChart();

    }
    
    private void showOptionChain() {
            
            optionChain = Util.getHistoricData(dtPicker.getDate());
            optionChainTableModel = (OptionChainTableModel) tblOptionChain.getModel();

            showOptionChainTableData();
    
    }
    
    private void showPositionTableData() {
         for (OptLeg objOptLeg : objOptStrg.getListOptLeg()) { // For each OptLeg in the list
            positionTableModel.addRowData(objOptLeg);
        }
        positionTableModel.fireTableDataChanged();        
    }
    
    private void showChart () {

        pnlChart.removeAll();
        pnlChart.add(getLineChart());        
        pnlChart.revalidate();
        pnlChart.repaint();	
    } 
    
    private  ChartPanel getLineChart() {
            JFreeChart lineChart = ChartFactory.createXYLineChart(
                     "PayOff",
                     "Spot price","P/L",
                     createDataset() ,
                     PlotOrientation.VERTICAL,
                     true,true,false);	

            ChartPanel chartPanel = new ChartPanel( lineChart );
            chartPanel.setPreferredSize( new java.awt.Dimension( 400, 400 ) );
            chartPanel.setVisible(true);

            return chartPanel;

    }    

    private  XYDataset createDataset() {
        
        List<Integer> listNet = objOptStrg.getNetPayOffData();
        List<Integer> listCurrent = objOptStrg.getCurrentPayOffData();

        var seriesNet = new XYSeries("Net");
        int nUnderlyingPrice = objOptStrg.getChartStart();

        for (Integer element : listNet) {
            seriesNet.add(nUnderlyingPrice, element.doubleValue());
            nUnderlyingPrice += 100;
        }

        nUnderlyingPrice = objOptStrg.getChartStart();
        var seriesCurrent = new XYSeries("Current ");

        for (Integer element : listCurrent) {
            seriesCurrent.add(nUnderlyingPrice, element.doubleValue());
            nUnderlyingPrice += 100;
        }                

        var dataset = new XYSeriesCollection();
        dataset.addSeries(seriesCurrent);
        dataset.addSeries(seriesNet);

        return dataset;	 

     }

    private void showOptionChainTableData() {
        optionChainTableModel.clearAllRows();
        
        for (OptionPrice objOptionPrice : optionChain.getListOptionPrice()) { // For each OptLeg in the list
            optionChainTableModel.addRowData(objOptionPrice);
        }
        optionChainTableModel.fireTableDataChanged();  
    }
}
